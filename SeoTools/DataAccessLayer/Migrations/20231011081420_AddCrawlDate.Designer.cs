// <auto-generated />
using System;
using DataAccessLayer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(SeoToolDbContext))]
    [Migration("20231011081420_AddCrawlDate")]
    partial class AddCrawlDate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataAccessLayer.Entites.CrawlDate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CrawlDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CrawlDates");
                });

            modelBuilder.Entity("DataAccessLayer.Entites.Keyword", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("KeywordGroupId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModificationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Query")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KeywordGroupId");

                    b.ToTable("Keywords");
                });

            modelBuilder.Entity("DataAccessLayer.Entites.KeywordGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("KeywordGroups");
                });

            modelBuilder.Entity("DataAccessLayer.Entites.Rank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CrawlDateId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("KeywordId")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<int>("SiteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CrawlDateId");

                    b.HasIndex("KeywordId");

                    b.HasIndex("SiteId");

                    b.ToTable("Ranks");
                });

            modelBuilder.Entity("DataAccessLayer.Entites.Site", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("KeywordGroupId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModificationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SiteName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KeywordGroupId");

                    b.ToTable("Sites");
                });

            modelBuilder.Entity("DataAccessLayer.Entites.Keyword", b =>
                {
                    b.HasOne("DataAccessLayer.Entites.KeywordGroup", "KeywordGroup")
                        .WithMany("Keywords")
                        .HasForeignKey("KeywordGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KeywordGroup");
                });

            modelBuilder.Entity("DataAccessLayer.Entites.Rank", b =>
                {
                    b.HasOne("DataAccessLayer.Entites.CrawlDate", "CrawlDate")
                        .WithMany("Ranks")
                        .HasForeignKey("CrawlDateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Entites.Keyword", "Keyword")
                        .WithMany("Ranks")
                        .HasForeignKey("KeywordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLayer.Entites.Site", "Site")
                        .WithMany("Ranks")
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CrawlDate");

                    b.Navigation("Keyword");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("DataAccessLayer.Entites.Site", b =>
                {
                    b.HasOne("DataAccessLayer.Entites.KeywordGroup", "KeywordGroup")
                        .WithMany("Sites")
                        .HasForeignKey("KeywordGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KeywordGroup");
                });

            modelBuilder.Entity("DataAccessLayer.Entites.CrawlDate", b =>
                {
                    b.Navigation("Ranks");
                });

            modelBuilder.Entity("DataAccessLayer.Entites.Keyword", b =>
                {
                    b.Navigation("Ranks");
                });

            modelBuilder.Entity("DataAccessLayer.Entites.KeywordGroup", b =>
                {
                    b.Navigation("Keywords");

                    b.Navigation("Sites");
                });

            modelBuilder.Entity("DataAccessLayer.Entites.Site", b =>
                {
                    b.Navigation("Ranks");
                });
#pragma warning restore 612, 618
        }
    }
}
